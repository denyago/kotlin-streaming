buildscript {
    ext.kotlin_version = '1.3.50'
    ext.ktor_version = '1.2.4'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id "io.gitlab.arturbosch.detekt" version "1.1.1"
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'MainKt'

version '0.0.1'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:1.2.3"

    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.3.2'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

detekt {
    toolVersion = "1.1.1"
    input = files("src/main/kotlin", "src/test/kotlin")
    filters = ".*/resources/.*,.*/build/.*"
    autoCorrect = true
    //baseline = file("my-detekt-baseline.xml") // Just if you want to create a baseline file.
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/reports/coverage")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.75
            }
        }
    }
}

task lintAndTestCoverage {
    group = "verification"
    description = "Lints and runs the unit tests with coverage."

    dependsOn(":detekt", ":test", ":jacocoTestReport", ":jacocoTestCoverageVerification")
    tasks.findByName("test").mustRunAfter("detekt")
    tasks.findByName("jacocoTestReport").mustRunAfter("test")
    tasks.findByName("jacocoTestCoverageVerification").mustRunAfter("jacocoTestReport")
}